generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  username String @unique

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt

  Feed     Feed[]
}

// TODO: auth tables

enum Visibility {
  Public
  Unlisted
  Private
}

model Feed {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  name String

  description String?

  creator User       @relation(fields: [userId], references: [id])
  userId    String   @db.Uuid

  items   FeedItem[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  visibility Visibility
}

enum FeedItemType {
  YouTubeChannel
}

model FeedItem {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  name String

  description String?

  createdAt DateTime @default(now())

  updatedAt DateTime @default(now())

  meta FeedItemMeta @relation(fields: [feedItemMetaId], references: [id])
  feedItemMetaId String @db.Uuid

  Feed Feed @relation(fields: [feedId], references: [id])
  feedId         String @db.Uuid

}

model FeedItemMeta {
  id String @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid

  name String

  originId String

  type     FeedItemType
  FeedItem FeedItem[]

  createdAt DateTime @default(now())

  updatedAt DateTime @updatedAt
}
